// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GammaTextField/> Shallow render of <GammaTextField/> with a name 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GammaTextField
    error={true}
    lowerLabel="Please dont"
    onChange={[Function]}
    upperLabel="Don't write a T"
    value="hmmm"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel)>
          Don't write a T
</WithStyles(InputLabel)>,
        <WithStyles(Input)
          disabled={undefined}
          name={undefined}
          onBlur={undefined}
          onChange={[Function]}
          type="text"
          value="hmmm"
/>,
        <GammaLowerLabel
          text="Please dont"
/>,
      ],
      "error": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Don't write a T",
        },
        "ref": null,
        "rendered": "Don't write a T",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": undefined,
          "name": undefined,
          "onBlur": undefined,
          "onChange": [Function],
          "type": "text",
          "value": "hmmm",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "Please dont",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel)>
            Don't write a T
</WithStyles(InputLabel)>,
          <WithStyles(Input)
            disabled={undefined}
            name={undefined}
            onBlur={undefined}
            onChange={[Function]}
            type="text"
            value="hmmm"
/>,
          <GammaLowerLabel
            text="Please dont"
/>,
        ],
        "error": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Don't write a T",
          },
          "ref": null,
          "rendered": "Don't write a T",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": undefined,
            "name": undefined,
            "onBlur": undefined,
            "onChange": [Function],
            "type": "text",
            "value": "hmmm",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "Please dont",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<GammaTextField/> Shallow render of a disabled <GammaTextField/> 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GammaTextField
    numbersOnly={true}
    onChange={[Function]}
    upperLabel="Only numbers"
    value="123"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel)>
          Only numbers
</WithStyles(InputLabel)>,
        <WithStyles(Input)
          disabled={undefined}
          name={undefined}
          onBlur={undefined}
          onChange={[Function]}
          type="number"
          value="123"
/>,
        <GammaLowerLabel
          text=""
/>,
      ],
      "error": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Only numbers",
        },
        "ref": null,
        "rendered": "Only numbers",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": undefined,
          "name": undefined,
          "onBlur": undefined,
          "onChange": [Function],
          "type": "number",
          "value": "123",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel)>
            Only numbers
</WithStyles(InputLabel)>,
          <WithStyles(Input)
            disabled={undefined}
            name={undefined}
            onBlur={undefined}
            onChange={[Function]}
            type="number"
            value="123"
/>,
          <GammaLowerLabel
            text=""
/>,
        ],
        "error": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Only numbers",
          },
          "ref": null,
          "rendered": "Only numbers",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": undefined,
            "name": undefined,
            "onBlur": undefined,
            "onChange": [Function],
            "type": "number",
            "value": "123",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<GammaTextField/> Shallow render of a disabled <GammaTextField/> with password 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GammaTextField
    disabled={true}
    lowerLabel="Very secret"
    onChange={[Function]}
    password={true}
    upperLabel="Your supersecret password"
    value="secret"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel)>
          Your supersecret password
</WithStyles(InputLabel)>,
        <WithStyles(Input)
          disabled={true}
          name={undefined}
          onBlur={undefined}
          onChange={[Function]}
          type="password"
          value="secret"
/>,
        <GammaLowerLabel
          text="Very secret"
/>,
      ],
      "error": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Your supersecret password",
        },
        "ref": null,
        "rendered": "Your supersecret password",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": true,
          "name": undefined,
          "onBlur": undefined,
          "onChange": [Function],
          "type": "password",
          "value": "secret",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "Very secret",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel)>
            Your supersecret password
</WithStyles(InputLabel)>,
          <WithStyles(Input)
            disabled={true}
            name={undefined}
            onBlur={undefined}
            onChange={[Function]}
            type="password"
            value="secret"
/>,
          <GammaLowerLabel
            text="Very secret"
/>,
        ],
        "error": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Your supersecret password",
          },
          "ref": null,
          "rendered": "Your supersecret password",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": true,
            "name": undefined,
            "onBlur": undefined,
            "onChange": [Function],
            "type": "password",
            "value": "secret",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "Very secret",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<GammaTextField/> Shallow render of a normal <GammaTextField/> with an error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GammaTextField
    disabled={true}
    lowerLabel="Why hello upperLabel"
    onChange={[Function]}
    value="Hej"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel) />,
        <WithStyles(Input)
          disabled={true}
          name={undefined}
          onBlur={undefined}
          onChange={[Function]}
          type="text"
          value="Hej"
/>,
        <GammaLowerLabel
          text="Why hello upperLabel"
/>,
      ],
      "error": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": true,
          "name": undefined,
          "onBlur": undefined,
          "onChange": [Function],
          "type": "text",
          "value": "Hej",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "Why hello upperLabel",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel) />,
          <WithStyles(Input)
            disabled={true}
            name={undefined}
            onBlur={undefined}
            onChange={[Function]}
            type="text"
            value="Hej"
/>,
          <GammaLowerLabel
            text="Why hello upperLabel"
/>,
        ],
        "error": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": true,
            "name": undefined,
            "onBlur": undefined,
            "onChange": [Function],
            "type": "text",
            "value": "Hej",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "Why hello upperLabel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<GammaTextField/> Shallow render of primary <GammaTextField/> 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GammaTextField
    lowerLabel="Why hello upperLabel"
    onChange={[Function]}
    upperLabel="Hello lowerLabel"
    value="Hej"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel)>
          Hello lowerLabel
</WithStyles(InputLabel)>,
        <WithStyles(Input)
          disabled={undefined}
          name={undefined}
          onBlur={undefined}
          onChange={[Function]}
          type="text"
          value="Hej"
/>,
        <GammaLowerLabel
          text="Why hello upperLabel"
/>,
      ],
      "error": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Hello lowerLabel",
        },
        "ref": null,
        "rendered": "Hello lowerLabel",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": undefined,
          "name": undefined,
          "onBlur": undefined,
          "onChange": [Function],
          "type": "text",
          "value": "Hej",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "Why hello upperLabel",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel)>
            Hello lowerLabel
</WithStyles(InputLabel)>,
          <WithStyles(Input)
            disabled={undefined}
            name={undefined}
            onBlur={undefined}
            onChange={[Function]}
            type="text"
            value="Hej"
/>,
          <GammaLowerLabel
            text="Why hello upperLabel"
/>,
        ],
        "error": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Hello lowerLabel",
          },
          "ref": null,
          "rendered": "Hello lowerLabel",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": undefined,
            "name": undefined,
            "onBlur": undefined,
            "onChange": [Function],
            "type": "text",
            "value": "Hej",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "Why hello upperLabel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<GammaTextField/> Shallow render of secondary <GammaTextField/> 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GammaTextField
    lowerLabelReflectLength={true}
    maxLength={20}
    onChange={[Function]}
    promptText="AwesomeUsername123"
    upperLabel="Your username"
    value="glazz"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(InputLabel)>
          Your username
</WithStyles(InputLabel)>,
        <WithStyles(Input)
          disabled={undefined}
          name={undefined}
          onBlur={undefined}
          onChange={[Function]}
          type="text"
          value="glazz"
/>,
        <GammaLowerLabel
          text=""
/>,
      ],
      "error": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Your username",
        },
        "ref": null,
        "rendered": "Your username",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": undefined,
          "name": undefined,
          "onBlur": undefined,
          "onChange": [Function],
          "type": "text",
          "value": "glazz",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(InputLabel)>
            Your username
</WithStyles(InputLabel)>,
          <WithStyles(Input)
            disabled={undefined}
            name={undefined}
            onBlur={undefined}
            onChange={[Function]}
            type="text"
            value="glazz"
/>,
          <GammaLowerLabel
            text=""
/>,
        ],
        "error": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Your username",
          },
          "ref": null,
          "rendered": "Your username",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": undefined,
            "name": undefined,
            "onBlur": undefined,
            "onChange": [Function],
            "type": "text",
            "value": "glazz",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
